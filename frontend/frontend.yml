AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFront with Header Security and site content
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  pCertificateArn:
    Type: String
  pDomain:
    Type: String

Resources:
  S3StaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub short.${pDomain}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Project
          Value: url-shortener

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref "S3StaticBucket"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${S3StaticBucket}/*
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub short.${pDomain}
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId: !Sub "S3-${AWS::StackName}-root"
          ViewerProtocolPolicy: "redirect-to-https"
          ResponseHeadersPolicyId: !Ref ResponseHeadersPolicy
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: "/404.html"
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: "/403.html"
        Enabled: true
        HttpVersion: "http2"
        DefaultRootObject: "index.htm"
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt S3StaticBucket.RegionalDomainName
            Id: !Sub "S3-${AWS::StackName}-root"
            S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "",
                  [
                    "origin-access-identity/cloudfront/",
                    !Ref CloudFrontOriginAccessIdentity,
                  ],
                ]
        PriceClass: "PriceClass_All"
        ViewerCertificate:
          AcmCertificateArn: !Ref "pCertificateArn"
          MinimumProtocolVersion: "TLSv1.1_2016"
          SslSupportMethod: "sni-only"
      Tags:
        - Key: Project
          Value: url-shortener

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "CloudFront OAI for ${pDomain}"

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${pDomain}."
      RecordSets:
        - Name: !Sub "short.${pDomain}"
          Type: "A"
          AliasTarget:
            DNSName: !GetAtt "CloudFrontDistribution.DomainName"
            EvaluateTargetHealth: false
            # The following HosteZoneId is always used for alias records pointing to CF.
            HostedZoneId: "Z2FDTNDATAQYW2"

  ResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub "${AWS::StackName}-static-site-security-headers"
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true
          ContentSecurityPolicy:
            ContentSecurityPolicy: "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'"
            Override: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: DENY
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: "same-origin"
            Override: true
          XSSProtection:
            ModeBlock: true
            Override: true
            Protection: true

Outputs:
  CloudFrontDistribution:
    Description: CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontDomainName:
    Description: Website address
    Value: !Sub "${pDomain}"
