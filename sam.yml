AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: zoph.io - url-shortener - https://zoph.io - June 2022
###########################################################
Parameters:
  ###########################################################
  pAppUrl:
    Type: String
    Description: App URL
  pEnv:
    Type: String
    Description: Environment Name
  pAWSRegion:
    Type: String
    Description: AWS Region
  pProjectName:
    Type: String
    Description: Project Name
  pMinChar:
    Type: String
    Description: Minimum number of character for the random string
  pMaxChar:
    Type: String
    Description: Maximum number of character for the random string
  pDescription:
    Type: String
    Description: Project description
  pAlertsRecipient:
    Type: String
    Description: Alerts recipient (prefer distribution list)

###########################################################
Resources:
  ###########################################################
  ShortenerFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub ${pProjectName}-shortener-${pEnv}
      Description: !Sub ${pProjectName} - ${pDescription}
      Handler: handlers.main
      Runtime: python3.9
      CodeUri: shortener/
      MemorySize: 256
      Timeout: 300
      Environment:
        Variables:
          APP_URL: !Sub ${pAppUrl}
          ENVIRONMENT: !Ref pEnv
          TABLE_NAME: !Sub "${pProjectName}-url-table-${pEnv}"
          AWS_REGION: !Sub ${pAWSRegion}
          MIN_CHAR: !Sub ${pMinChar}
          MAX_CHAR: !Sub ${pMaxChar}
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource: !Fn::GetAtt UrlDynamoTable.Arn
            - Effect: Allow
              Action:
                - logs:PutLogEvents
              Resource: !Sub "arn:aws:logs:*:*:/aws/lambda/${pProjectName}-${pEnv}"
      Tags:
        Project: !Ref pProjectName
        Environment: !Ref pEnv

  RetreiverFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub ${pProjectName}-retreiver-${pEnv}
      Description: !Sub ${pProjectName} - ${pDescription}
      Handler: handlers.main
      Runtime: python3.9
      CodeUri: retreiver/
      MemorySize: 256
      Timeout: 300
      Environment:
        Variables:
          TABLE_NAME: !Sub "${pProjectName}-url-table-${pEnv}"
          AWS_REGION: !Sub ${pAWSRegion}
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource: !Fn::GetAtt UrlDynamoTable.Arn
            - Effect: Allow
              Action:
                - logs:PutLogEvents
              Resource: !Sub "arn:aws:logs:*:*:/aws/lambda/${pProjectName}-retreiver-${pEnv}"
      Tags:
        Project: !Ref pProjectName
        Environment: !Ref pEnv

  UrlDynamoTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: short_id
          AttributeType: S
      KeySchema:
        - AttributeName: short_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: !Sub "${pProjectName}-url-table-${pEnv}"
      Tags:
        - Key: Project
          Value: !Ref pProjectName

  InvokeConfigIW:
    Type: AWS::Lambda::EventInvokeConfig
    DependsOn: ShortenerFunction
    Properties:
      FunctionName: !Sub ${pProjectName}-${pEnv}
      Qualifier: $LATEST
      MaximumRetryAttempts: 0

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${pProjectName}-${pEnv}"
      RetentionInDays: 30

  CloudWatchLogsMetricsFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "ERROR"
      LogGroupName: !Sub "/aws/lambda/${pProjectName}-${pEnv}"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${pProjectName}-${pEnv}
          MetricName: "ERROR"
          DefaultValue: 0
    DependsOn: LambdaLogGroup

  ErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingTopic
      AlarmDescription: !Sub "Alarm for ERROR on ${pProjectName} function"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: ERROR
      Namespace: !Sub ${pProjectName}-${pEnv}
      OKActions:
        - !Ref AlertingTopic
      Period: 10
      Statistic: Sum
      Threshold: 1
      TreatMissingData: ignore

  AlertingTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Sub "Alarm Topic for ${pProjectName} - ${pEnv}"
      Subscription:
        - Protocol: email
          Endpoint: !Ref pAlertsRecipient
